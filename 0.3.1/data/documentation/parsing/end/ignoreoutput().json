{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ignoreOutput"},{"kind":"text","text":"() -> "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","text":"Skip","preciseIdentifier":"s:7Parsing4SkipV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser that discards its output."}]}],"kind":"content"}],"sections":[],"abstract":[{"text":"Returns a parser that discards the output of this parser by returning ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" instead.","type":"text"}],"variants":[{"paths":["\/documentation\/parsing\/end\/ignoreoutput()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/ignoreOutput()","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Instance Method","symbolKind":"method","extendedModule":"Parsing","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ignoreOutput"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing4SkipV","text":"Skip","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","externalID":"s:7Parsing6ParserPAAE12ignoreOutputAA4SkipVyxGyF::SYNTHESIZED::s:7Parsing3EndV","modules":[{"name":"Parsing"}],"title":"ignoreOutput()"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/Parser-Implementations"]]},"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/End/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/Parser-Implementations","type":"topic","abstract":[],"role":"collectionGroup","kind":"article","url":"\/documentation\/parsing\/end\/parser-implementations","title":"Parser Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"navigatorTitle":[{"text":"Skip","kind":"identifier"}],"url":"\/documentation\/parsing\/skip","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Skip","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","title":"Skip","role":"symbol","abstract":[{"type":"text","text":"A parser that discards the output of another parser."}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","role":"collection","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/End/ignoreOutput()":{"abstract":[{"text":"Returns a parser that discards the output of this parser by returning ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":" instead.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/ignoreOutput()","title":"ignoreOutput()","url":"\/documentation\/parsing\/end\/ignoreoutput()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ignoreOutput","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Skip","preciseIdentifier":"s:7Parsing4SkipV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/End":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","type":"topic","abstract":[{"text":"A parser that succeeds if the input is empty, and fails otherwise.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"}],"url":"\/documentation\/parsing\/end","title":"End","navigatorTitle":[{"text":"End","kind":"identifier"}]}}}