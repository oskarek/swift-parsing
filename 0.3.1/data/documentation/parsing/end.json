{"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"abstract":[{"text":"A parser that succeeds if the input is empty, and fails otherwise.","type":"text"}],"kind":"symbol","relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"title":"Conforms To","type":"conformsTo"}],"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"}],"symbolKind":"struct","title":"End","navigatorTitle":[{"kind":"identifier","text":"End"}],"externalID":"s:7Parsing3EndV","modules":[{"name":"Parsing"}],"role":"symbol","roleHeading":"Structure"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl","text":"Collection"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"code":["End<Substring>().parse(\"\"[...]) \/\/ (output: (), rest: \"\")","End<Substring>().parse(\"Hello\"[...]) \/\/ (output: nil, rest: \"Hello\")"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/end"]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/parse(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/Parser-Implementations"],"title":"Default Implementations"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/End/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/Parser-Implementations","type":"topic","abstract":[],"role":"collectionGroup","kind":"article","url":"\/documentation\/parsing\/end\/parser-implementations","title":"Parser Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/End":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","type":"topic","abstract":[{"text":"A parser that succeeds if the input is empty, and fails otherwise.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"}],"url":"\/documentation\/parsing\/end","title":"End","navigatorTitle":[{"text":"End","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/End/parse(_:)":{"abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"url":"\/documentation\/parsing\/end\/parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":"?","kind":"text"}],"role":"symbol","kind":"symbol","title":"parse(_:)","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/End/init()":{"title":"init()","abstract":[],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"type":"topic","url":"\/documentation\/parsing\/end\/init()","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/init()"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","role":"collection","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","role":"symbol","abstract":[{"type":"text","text":"Declares a type that can parse an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","url":"\/documentation\/parsing\/parser","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]}}}