{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"title":"Conforms To","type":"conformsTo"}],"abstract":[{"text":"A parser that attempts to run another parser as many times as specified, accumulating the result","type":"text"},{"text":" ","type":"text"},{"text":"of the outputs.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/many"]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Separator","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"text":", ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"text":", ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"For example, given a comma-separated string of numbers, one could parse out an array of","type":"text"},{"text":" ","type":"text"},{"text":"integers:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["var input = \"1,2,3\"[...]","let output = Many(Int.parser(), separator: \",\").parse(&input)","precondition(input == \"\")","precondition(output == [1, 2, 3])"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The most general version of "},{"type":"codeVoice","code":"Many"},{"type":"text","text":" takes a closure that can customize how outputs accumulate,"},{"type":"text","text":" "},{"type":"text","text":"much like "},{"type":"codeVoice","code":"Sequence.reduce(into:_)"},{"type":"text","text":". We could, for example, sum the numbers as we parse them"},{"type":"text","text":" "},{"type":"text","text":"instead of accumulating each value in an array:"}]},{"syntax":null,"type":"codeListing","code":["let sumParser = Many(","  Int.parser(of: Substring.self),","  into: 0,","  separator: StartsWith(\",\"),","  +=",")","var input = \"1,2,3\"[...]","let output = Many(Int.parser(), into: 0, separator: \",\").parse(&input)","precondition(input == \"\")","precondition(output == 6)"]}]}],"sections":[],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:atLeast:atMost:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:atLeast:atMost:separator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:atLeast:atMost:_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:atLeast:atMost:separator:_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/initialResult","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/maximum","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/minimum","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/separator","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/updateAccumulatingResult","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/upstream"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/Parser-Implementations"],"title":"Default Implementations","generated":true}],"kind":"symbol","metadata":{"navigatorTitle":[{"text":"Many","kind":"identifier"}],"symbolKind":"struct","modules":[{"name":"Parsing"}],"title":"Many","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"externalID":"s:7Parsing4ManyV","role":"symbol","roleHeading":"Structure"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Many/updateAccumulatingResult":{"title":"updateAccumulatingResult","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateAccumulatingResult","kind":"identifier"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/many\/updateaccumulatingresult","role":"symbol","type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/updateAccumulatingResult"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/maximum":{"title":"maximum","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"maximum"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/many\/maximum","role":"symbol","type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/maximum"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/initialResult":{"abstract":[],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"initialResult","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"type":"topic","role":"symbol","title":"initialResult","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/initialResult","kind":"symbol","url":"\/documentation\/parsing\/many\/initialresult"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:into:atLeast:atMost:_:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atLeast","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Upstream","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Upstream.Input, Void>","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","role":"symbol","title":"init(_:into:atLeast:atMost:_:)","kind":"symbol","abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser at least and at most the given"},{"type":"text","text":" "},{"type":"text","text":"number of times, accumulating the outputs into a result with a given closure."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:atLeast:atMost:_:)","url":"\/documentation\/parsing\/many\/init(_:into:atleast:atmost:_:)"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/parsing","role":"collection","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/separator":{"type":"topic","url":"\/documentation\/parsing\/many\/separator","kind":"symbol","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"separator"},{"kind":"text","text":": "},{"text":"Separator","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/separator","title":"separator"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/parse(_:)":{"title":"parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/parse(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","url":"\/documentation\/parsing\/many\/parse(_:)","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/upstream":{"type":"topic","url":"\/documentation\/parsing\/many\/upstream","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"upstream","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Upstream"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/upstream","role":"symbol","kind":"symbol","title":"upstream"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/Parser-Implementations":{"type":"topic","url":"\/documentation\/parsing\/many\/parser-implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/Parser-Implementations","role":"collectionGroup","title":"Parser Implementations","kind":"article","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/minimum":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minimum","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"kind":"symbol","title":"minimum","abstract":[],"url":"\/documentation\/parsing\/many\/minimum","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/minimum","role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:into:atLeast:atMost:separator:_:)":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atLeast"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atMost"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:into:atLeast:atMost:separator:_:)","abstract":[{"text":"Initializes a parser that attempts to run the given parser at least and at most the given","type":"text"},{"text":" ","type":"text"},{"text":"number of times, accumulating the outputs into a result with a given closure.","type":"text"}],"type":"topic","url":"\/documentation\/parsing\/many\/init(_:into:atleast:atmost:separator:_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:atLeast:atMost:separator:_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","type":"topic","url":"\/documentation\/parsing\/parser","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"abstract":[{"type":"text","text":"Declares a type that can parse an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:atLeast:atMost:separator:)":{"abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser at least and at most the given"},{"type":"text","text":" "},{"type":"text","text":"number of times, accumulating the outputs in an array."}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":", "},{"text":"atLeast","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":")"}],"title":"init(_:atLeast:atMost:separator:)","conformance":{"constraints":[{"type":"codeVoice","code":"Upstream"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"[Upstream.Output]"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Upstream.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Separator.Input"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:atLeast:atMost:separator:)","url":"\/documentation\/parsing\/many\/init(_:atleast:atmost:separator:)","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:atLeast:atMost:)":{"kind":"symbol","url":"\/documentation\/parsing\/many\/init(_:atleast:atmost:)","abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser at least and at most the given"},{"type":"text","text":" "},{"type":"text","text":"number of times, accumulating the outputs in an array."}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Upstream"},{"text":", ","kind":"text"},{"text":"atLeast","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atMost","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Upstream"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"[Upstream.Output]"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Upstream.Input, Void>"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:atLeast:atMost:)","type":"topic","title":"init(_:atLeast:atMost:)","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"navigatorTitle":[{"text":"Many","kind":"identifier"}],"url":"\/documentation\/parsing\/many","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","role":"symbol","title":"Many","kind":"symbol","abstract":[{"type":"text","text":"A parser that attempts to run another parser as many times as specified, accumulating the result"},{"type":"text","text":" "},{"text":"of the outputs.","type":"text"}]}}}