{"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"inlineContent":[{"text":"This parser is named after ","type":"text"},{"type":"codeVoice","code":"Sequence.prefix"},{"text":", which it uses under the hood to consume a number","type":"text"},{"text":" ","type":"text"},{"text":"of elements and return them as output. It can be configured with minimum and maximum lengths,","type":"text"},{"text":" ","type":"text"},{"text":"as well as a predicate.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For example, to parse as many numbers off the beginning of a substring:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["var input = \"123 hello world\"[...]","Prefix { $0.isNumber }.parse(&input) \/\/ \"123\"","input \/\/ \" Hello world\""]},{"inlineContent":[{"type":"text","text":"If you wanted this parser to fail if "},{"inlineContent":[{"type":"text","text":"no"}],"type":"emphasis"},{"type":"text","text":" numbers are consumed, you could introduce a minimum"},{"type":"text","text":" "},{"type":"text","text":"length."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["var input = \"No numbers here\"[...]","Prefix(1...) { $0.isNumber }).parse(&input) \/\/ nil","input \/\/ \"No numbers here\""]},{"inlineContent":[{"type":"text","text":"If a predicate is not provided, the parser will simply consume the prefix within the minimum and"},{"type":"text","text":" "},{"type":"text","text":"maximum lengths provided:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["var input = \"Lorem ipsum dolor\"[...]","Prefix(2).parse(&input) \/\/ \"Lo\"","input \/\/ \"rem ipsum dolor\""]}],"kind":"content"}],"metadata":{"navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"title":"Prefix","modules":[{"name":"Parsing"}],"roleHeading":"Structure","externalID":"s:7Parsing6PrefixV","symbolKind":"struct","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-4n2mo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-6hhnk","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-ljcs","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-x8z4","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(minLength:maxLength:while:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/maxLength","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/minLength","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/predicate"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/parse(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/Parser-Implementations"],"generated":true}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"kind":"relationships"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/prefix"]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","interfaceLanguage":"swift"},"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-ljcs":{"url":"\/documentation\/parsing\/prefix\/init(_:while:)-ljcs","abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"title":"init(_:while:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-ljcs","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"while","kind":"externalParam"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":")?)"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(minLength:maxLength:while:)":{"kind":"symbol","url":"\/documentation\/parsing\/prefix\/init(minlength:maxlength:while:)","title":"init(minLength:maxLength:while:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"minLength","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(minLength:maxLength:while:)","abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/parsing","role":"collection","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/Parser-Implementations":{"title":"Parser Implementations","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/Parser-Implementations","kind":"article","url":"\/documentation\/parsing\/prefix\/parser-implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/minLength":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"title":"minLength","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/minLength","url":"\/documentation\/parsing\/prefix\/minlength","role":"symbol","type":"topic","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","type":"topic","url":"\/documentation\/parsing\/parser","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"abstract":[{"type":"text","text":"Declares a type that can parse an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/parse(_:)":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"?"}],"title":"parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/parse(_:)","url":"\/documentation\/parsing\/prefix\/parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-x8z4":{"role":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","text":"ClosedRange"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")?)"}],"kind":"symbol","url":"\/documentation\/parsing\/prefix\/init(_:while:)-x8z4","abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"title":"init(_:while:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-x8z4"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-6hhnk":{"url":"\/documentation\/parsing\/prefix\/init(_:while:)-6hhnk","abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"PartialRangeThrough","preciseIdentifier":"s:s19PartialRangeThroughV"},{"text":"<","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")?)"}],"type":"topic","title":"init(_:while:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-6hhnk","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"title":"Prefix","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","kind":"symbol","url":"\/documentation\/parsing\/prefix"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/maxLength":{"url":"\/documentation\/parsing\/prefix\/maxlength","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"maxLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","title":"maxLength","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/maxLength","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/predicate":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"predicate"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")?"}],"title":"predicate","url":"\/documentation\/parsing\/prefix\/predicate","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/predicate","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-4n2mo":{"kind":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"PartialRangeFrom","kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-4n2mo","url":"\/documentation\/parsing\/prefix\/init(_:while:)-4n2mo","role":"symbol","title":"init(_:while:)","abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}]}}}