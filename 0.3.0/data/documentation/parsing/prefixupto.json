{"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"kind":"relationships"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Collection","kind":"typeIdentifier","preciseIdentifier":"s:Sl"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"This parser is named after ","type":"text"},{"code":"Sequence.prefix(upTo:)","type":"codeVoice"},{"text":", and uses similar logic under the hood to","type":"text"},{"text":" ","type":"text"},{"text":"consume and return input up to a particular subsequence.","type":"text"}]},{"code":["let lineParser = PrefixUpTo<Substring>(\"\\n\")","","var input = \"Hello\\nworld\\n\"[...]","line.parse(&input) \/\/ \"Hello\"","input \/\/ \"\\nworld\\n\""],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/init(_:)-7b2he","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/init(_:)-8sywj","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/init(_:)-9kyot","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/init(_:by:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/areEquivalent","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/possibleMatch"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/parse(_:)"],"title":"Instance Methods"},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/Parser-Implementations"],"generated":true}],"metadata":{"modules":[{"name":"Parsing"}],"title":"PrefixUpTo","symbolKind":"struct","navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"PrefixUpTo","kind":"identifier"}],"roleHeading":"Structure","externalID":"s:7Parsing10PrefixUpToV","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"sections":[],"variants":[{"paths":["\/documentation\/parsing\/prefixupto"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/areEquivalent":{"url":"\/documentation\/parsing\/prefixupto\/areequivalent","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/areEquivalent","abstract":[],"kind":"symbol","title":"areEquivalent","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"areEquivalent","kind":"identifier"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/init(_:by:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/init(_:by:)","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[],"title":"init(_:by:)","url":"\/documentation\/parsing\/prefixupto\/init(_:by:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","type":"topic","url":"\/documentation\/parsing\/parser","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"abstract":[{"type":"text","text":"Declares a type that can parse an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/init(_:)-7b2he":{"abstract":[],"url":"\/documentation\/parsing\/prefixupto\/init(_:)-7b2he","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/init(_:)-7b2he","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"init(_:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":")"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/init(_:)-9kyot":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/init(_:)-9kyot","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS8UTF8ViewV","text":"UTF8View"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/prefixupto\/init(_:)-9kyot","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","kind":"symbol","title":"init(_:)","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/Parser-Implementations":{"kind":"article","url":"\/documentation\/parsing\/prefixupto\/parser-implementations","role":"collectionGroup","abstract":[],"title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/Parser-Implementations","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/parse(_:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/parse(_:)","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}],"type":"topic","title":"parse(_:)","url":"\/documentation\/parsing\/prefixupto\/parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"?"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixUpTo"}],"url":"\/documentation\/parsing\/prefixupto","role":"symbol","type":"topic","kind":"symbol","title":"PrefixUpTo","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"navigatorTitle":[{"kind":"identifier","text":"PrefixUpTo"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/possibleMatch":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/possibleMatch","title":"possibleMatch","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"possibleMatch"},{"text":": ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/prefixupto\/possiblematch","type":"topic","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/parsing","role":"collection","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/init(_:)-8sywj":{"role":"symbol","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Input.SubSequence","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Input.Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]},"title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/init(_:)-8sywj","url":"\/documentation\/parsing\/prefixupto\/init(_:)-8sywj","abstract":[],"kind":"symbol"}}}