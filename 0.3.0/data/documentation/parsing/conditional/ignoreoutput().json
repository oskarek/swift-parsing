{"sections":[],"metadata":{"externalID":"s:7Parsing6ParserPAAE12ignoreOutputAA4SkipVyxGyF::SYNTHESIZED::s:7Parsing11ConditionalO","symbolKind":"method","title":"ignoreOutput()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ignoreOutput","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing4SkipV","text":"Skip","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"Parsing"}],"roleHeading":"Instance Method","role":"symbol","extendedModule":"Parsing"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conditional\/ignoreoutput()"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Returns a parser that discards the output of this parser by returning ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":" instead.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/Parser-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ignoreOutput","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing4SkipV","text":"Skip","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser that discards its output."}]}]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/ignoreOutput()","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conditional/ignoreOutput()":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/ignoreOutput()","abstract":[{"type":"text","text":"Returns a parser that discards the output of this parser by returning "},{"code":"Void","type":"codeVoice"},{"type":"text","text":" instead."}],"kind":"symbol","url":"\/documentation\/parsing\/conditional\/ignoreoutput()","role":"symbol","title":"ignoreOutput()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ignoreOutput"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing4SkipV","text":"Skip"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conditional":{"abstract":[{"text":"A parser that can parse output from two types of parsers.","type":"text"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conditional","kind":"identifier"}],"type":"topic","role":"symbol","title":"Conditional","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","navigatorTitle":[{"text":"Conditional","kind":"identifier"}],"url":"\/documentation\/parsing\/conditional"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/parsing","role":"collection","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Conditional/Parser-Implementations":{"abstract":[],"kind":"article","type":"topic","role":"collectionGroup","title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/Parser-Implementations","url":"\/documentation\/parsing\/conditional\/parser-implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"url":"\/documentation\/parsing\/skip","abstract":[{"text":"A parser that discards the output of another parser.","type":"text"}],"title":"Skip","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Skip","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"Skip","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip"}}}