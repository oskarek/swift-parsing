{"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/first(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/second(_:)"],"title":"Enumeration Cases"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/parse(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/Parser-Implementations"],"title":"Default Implementations"}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"type":"conformsTo","title":"Conforms To"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conditional","kind":"identifier"},{"text":"<","kind":"text"},{"text":"First","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Second","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"First"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Second"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"First"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Second"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"First"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Second"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This parser is useful for situations where you want to run one of two different parsers based on"},{"type":"text","text":" "},{"type":"text","text":"a condition, which typically would force you to perform "},{"code":".eraseToAnyParser()","type":"codeVoice"},{"type":"text","text":" and incur a"},{"type":"text","text":" "},{"type":"text","text":"performance penalty."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, you can use this parser in a "},{"type":"codeVoice","code":"flatMap"},{"type":"text","text":" operation to use the parsed output to"},{"type":"text","text":" "},{"type":"text","text":"determine what parser to run next:"}],"type":"paragraph"},{"type":"codeListing","code":["versionParser.flatMap { version in","  version == \"2.0\"","    ? Conditional.first(V2Parser())","    : Conditional.second(LegacyParser())","}"],"syntax":null}]}],"metadata":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Conditional"}],"symbolKind":"enum","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conditional"}],"modules":[{"name":"Parsing"}],"roleHeading":"Enumeration","title":"Conditional","externalID":"s:7Parsing11ConditionalO"},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"sections":[],"variants":[{"paths":["\/documentation\/parsing\/conditional"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"A parser that can parse output from two types of parsers."}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conditional":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","type":"topic","title":"Conditional","abstract":[{"text":"A parser that can parse output from two types of parsers.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conditional","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"Conditional","kind":"identifier"}],"url":"\/documentation\/parsing\/conditional","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conditional/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/Parser-Implementations","type":"topic","title":"Parser Implementations","abstract":[],"kind":"article","url":"\/documentation\/parsing\/conditional\/parser-implementations","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/Conditional/parse(_:)":{"kind":"symbol","url":"\/documentation\/parsing\/conditional\/parse(_:)","type":"topic","role":"symbol","title":"parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"First"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"First"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conditional/first(_:)":{"kind":"symbol","url":"\/documentation\/parsing\/conditional\/first(_:)","type":"topic","role":"symbol","title":"Conditional.first(_:)","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"first"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"First"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/first(_:)","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","abstract":[{"type":"text","text":"Declares a type that can parse an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"title":"Parser","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Conditional/second(_:)":{"kind":"symbol","url":"\/documentation\/parsing\/conditional\/second(_:)","type":"topic","role":"symbol","title":"Conditional.second(_:)","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"second"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Second"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/second(_:)","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing","role":"collection","kind":"symbol","url":"\/documentation\/parsing"}}}