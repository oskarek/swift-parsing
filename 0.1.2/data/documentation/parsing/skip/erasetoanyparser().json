{"abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"variants":[{"paths":["\/documentation\/parsing\/skip\/erasetoanyparser()"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV","text":"AnyParser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"An ","type":"text"},{"code":"AnyPublisher","type":"codeVoice"},{"text":" wrapping this publisher.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This form of ","type":"text"},{"inlineContent":[{"type":"text","text":"type erasure"}],"type":"emphasis"},{"text":" preserves abstraction across API boundaries, such as different","type":"text"},{"text":" ","type":"text"},{"text":"modules.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"When you expose your composed parsers as the "},{"type":"codeVoice","code":"AnyParser"},{"type":"text","text":" type, you can change the underlying"},{"type":"text","text":" "},{"type":"text","text":"implementation over time without affecting existing clients."}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip\/eraseToAnyParser()"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"Parsing"}],"extendedModule":"Parsing","role":"symbol","externalID":"s:7Parsing6ParserPAAE010eraseToAnyB0AA0eB0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:7Parsing4SkipV","symbolKind":"method","title":"eraseToAnyParser()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV","text":"AnyParser"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip\/Parser-Implementations"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"type":"topic","abstract":[{"type":"text","text":"A type-erased parser of "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}],"navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"title":"AnyParser","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/anyparser"},"doc://co.pointfree.Parsing/documentation/Parsing/Skip/eraseToAnyParser()":{"abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing9AnyParserV","text":"AnyParser","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip\/eraseToAnyParser()","url":"\/documentation\/parsing\/skip\/erasetoanyparser()","role":"symbol","title":"eraseToAnyParser()"},"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","type":"topic","title":"Skip","abstract":[{"text":"A parser that discards the output of another parser.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Skip","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"Skip","kind":"identifier"}],"url":"\/documentation\/parsing\/skip","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing","role":"collection","kind":"symbol","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Skip/Parser-Implementations":{"abstract":[],"role":"collectionGroup","type":"topic","title":"Parser Implementations","url":"\/documentation\/parsing\/skip\/parser-implementations","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip\/Parser-Implementations"}}}