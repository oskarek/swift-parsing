{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"length","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"ClosedRange","preciseIdentifier":"s:SN","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": ((","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")? = nil)","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"length","content":[{"inlineContent":[{"type":"text","text":"A closed range that provides a minimum number and maximum of elements to consume"},{"type":"text","text":" "},{"type":"text","text":"for parsing to be considered successful."}],"type":"paragraph"}]},{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An optional closure that takes an element of the input sequence as its argument"},{"type":"text","text":" "},{"type":"text","text":"and returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the element should be included or "},{"code":"false","type":"codeVoice"},{"type":"text","text":" if it should be excluded."},{"type":"text","text":" "},{"type":"text","text":"Once the predicate returns "},{"code":"false","type":"codeVoice"},{"type":"text","text":" it will not be called again."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"code":["Prefix(2...4, while: { $0.isNumber }).parse(\"123456\") \/\/ \"1234\"","Prefix(2...4, while: { $0.isNumber }).parse(\"123\")    \/\/ \"123\"","Prefix(2...4, while: { $0.isNumber }).parse(\"1\")      \/\/ nil"],"syntax":null,"type":"codeListing"}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-x8z4"},"abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"metadata":{"modules":[{"name":"Parsing"}],"role":"symbol","symbolKind":"init","roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ClosedRange","preciseIdentifier":"s:SN","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"externalID":"s:7Parsing6PrefixV_5whileACyxGSNySiG_Sb7ElementQzcSgtcfc","title":"init(_:while:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/prefix\/init(_:while:)-x8z4"]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-x8z4":{"title":"init(_:while:)","abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")?)","kind":"text"}],"url":"\/documentation\/parsing\/prefix\/init(_:while:)-x8z4","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-x8z4"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"url":"\/documentation\/parsing\/prefix","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input."}],"navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"kind":"symbol","title":"Prefix","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing","role":"collection","kind":"symbol","url":"\/documentation\/parsing"}}}