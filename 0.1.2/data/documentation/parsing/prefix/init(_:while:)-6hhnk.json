{"metadata":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s19PartialRangeThroughV","kind":"typeIdentifier","text":"PartialRangeThrough"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")?)"}],"symbolKind":"init","modules":[{"name":"Parsing"}],"roleHeading":"Initializer","title":"init(_:while:)","role":"symbol","externalID":"s:7Parsing6PrefixV_5whileACyxGs19PartialRangeThroughVySiG_Sb7ElementQzcSgtcfc"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","text":"PartialRangeThrough"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")? = nil)"}]}],"kind":"declarations"},{"parameters":[{"name":"length","content":[{"type":"paragraph","inlineContent":[{"text":"A partial, inclusive range that provides a maximum number of elements to consume.","type":"text"}]}]},{"name":"predicate","content":[{"inlineContent":[{"text":"An optional closure that takes an element of the input sequence as its argument","type":"text"},{"text":" ","type":"text"},{"text":"and returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if the element should be included or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" if it should be excluded.","type":"text"},{"text":" ","type":"text"},{"text":"Once the predicate returns ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" it will not be called again.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"syntax":null,"type":"codeListing","code":["Prefix(...4, while: { $0.isNumber }).parse(\"123456\") \/\/ \"1234\"","Prefix(...4, while: { $0.isNumber }).parse(\"123\")    \/\/ \"123\""]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/parsing\/prefix\/init(_:while:)-6hhnk"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-6hhnk"},"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-6hhnk":{"title":"init(_:while:)","role":"symbol","abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"url":"\/documentation\/parsing\/prefix\/init(_:while:)-6hhnk","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"PartialRangeThrough","preciseIdentifier":"s:s19PartialRangeThroughV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")?)"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-6hhnk","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"url":"\/documentation\/parsing\/prefix","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input."}],"navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"kind":"symbol","title":"Prefix","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing","role":"collection","kind":"symbol","url":"\/documentation\/parsing"}}}