{"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/take(_:)-xku1"},"abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs","type":"text"},{"text":" ","type":"text"},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/Parser-Implementations"]]},"metadata":{"title":"take(_:)","extendedModule":"Parsing","role":"symbol","modules":[{"name":"Parsing"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Take3","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO5Take3V"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","symbolKind":"method","externalID":"s:7Parsing6ParserPAAE4takeyAA7ParsersO5Take3Vy_xqd__qd_0_qd_1_Gqd_1_AaBRd_1_5InputQyd_1_AJRtzqd___qd_0_t6OutputRtzr1_lF::SYNTHESIZED::s:7Parsing7NewlineV"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"B"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"parser"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO5Take3V","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take3","text":"Take3"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Parsing6ParserP","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == ("},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A parser to run immediately after this parser."}],"type":"paragraph"}],"name":"parser"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A parser that runs two parsers, returning both outputs in a flattened tuple.","type":"text"}]}]}],"variants":[{"paths":["\/documentation\/parsing\/newline\/take(_:)-xku1"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"kind":"symbol","abstract":[{"text":"A parser that consumes a single newline from the beginning of the input. It will consume both","type":"text"},{"text":" ","type":"text"},{"text":"line feeds (","type":"text"},{"type":"codeVoice","code":"\"\\n\""},{"text":") and carriage returns with line feeds (","type":"text"},{"type":"codeVoice","code":"\"\\r\\n\""},{"text":").","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","url":"\/documentation\/parsing\/newline","navigatorTitle":[{"kind":"identifier","text":"Newline"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Newline"}],"title":"Newline"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing","role":"collection","kind":"symbol","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take3":{"kind":"symbol","url":"\/documentation\/parsing\/parsers\/take3","type":"topic","role":"symbol","title":"Parsers.Take3","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Take3"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take3","navigatorTitle":[{"kind":"identifier","text":"Take3"}],"abstract":[{"type":"text","text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Newline/Parser-Implementations":{"kind":"article","abstract":[],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/Parser-Implementations","url":"\/documentation\/parsing\/newline\/parser-implementations","title":"Parser Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"type":"topic","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"title":"Parsers","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parsers"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","abstract":[{"type":"text","text":"Declares a type that can parse an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"title":"Parser","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline/take(_:)-xku1":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/take(_:)-xku1","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"B"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Take3","preciseIdentifier":"s:7Parsing7ParsersO5Take3V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"title":"take(_:)","abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs","type":"text"},{"text":" ","type":"text"},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/parsing\/newline\/take(_:)-xku1"}}}