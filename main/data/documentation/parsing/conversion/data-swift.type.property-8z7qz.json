{"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO11BytesToDataV","text":"BytesToData","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10ArraySliceV","text":"ArraySlice"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"kind":"text","text":">> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["Linux"]}]}],"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/data-swift.type.property-8z7qz"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion"]]},"abstract":[{"text":"A conversion from ","type":"text"},{"code":"ArraySlice<UInt8>","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":".","type":"text"}],"metadata":{"symbolKind":"property","roleHeading":"Type Property","title":"data","modules":[{"name":"Parsing"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"data","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"BytesToData","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO11BytesToDataV"},{"text":"<","kind":"text"},{"text":"ArraySlice","kind":"typeIdentifier","preciseIdentifier":"s:s10ArraySliceV"},{"text":"<","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":">>","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Conversions.BytesToData<ArraySlice<UInt8>>"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"extendedModule":"Parsing","role":"symbol","externalID":"s:7Parsing10ConversionPA2A11ConversionsO11BytesToDataVy_s10ArraySliceVys5UInt8VGGRszrlE4dataAMvpZ"},"variants":[{"paths":["\/documentation\/parsing\/conversion\/data-swift.type.property-8z7qz"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/BytesToData":{"kind":"symbol","title":"Conversions.BytesToData","role":"symbol","abstract":[{"text":"A conversion from a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrependableCollection"},{"text":" of UTF-8 bytes to ","type":"text"},{"code":"Data","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BytesToData"}],"navigatorTitle":[{"kind":"identifier","text":"BytesToData"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData","url":"\/documentation\/parsing\/conversions\/bytestodata"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/PrependableCollection":{"navigatorTitle":[{"kind":"identifier","text":"PrependableCollection"}],"url":"\/documentation\/parsing\/prependablecollection","type":"topic","title":"PrependableCollection","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrependableCollection","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrependableCollection"}],"abstract":[{"type":"text","text":"A collection that supports empty initialization and the ability to prepend a sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements of elements to itself."}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/data-swift.type.property-8z7qz":{"role":"symbol","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Conversions.BytesToData<ArraySlice<UInt8>>","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/parsing\/conversion\/data-swift.type.property-8z7qz","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier","text":"Conversions"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing11ConversionsO11BytesToDataV","kind":"typeIdentifier","text":"BytesToData"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s10ArraySliceV","kind":"typeIdentifier","text":"ArraySlice"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier","text":"UInt8"},{"kind":"text","text":">>"}],"title":"data","type":"topic","abstract":[{"type":"text","text":"A conversion from "},{"code":"ArraySlice<UInt8>","type":"codeVoice"},{"type":"text","text":" to "},{"code":"Data","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/data-swift.type.property-8z7qz","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"kind":"symbol","url":"\/documentation\/parsing\/conversions","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversions"}],"navigatorTitle":[{"kind":"identifier","text":"Conversions"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"title":"Conversions","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion":{"kind":"symbol","url":"\/documentation\/parsing\/conversion","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","title":"Conversion","abstract":[{"text":"Declares a type that can transform an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value ","type":"text"},{"inlineContent":[{"type":"text","text":"and"}],"type":"emphasis"},{"text":" transform an","type":"text"},{"text":" ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value back into an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"type":"topic"}}}