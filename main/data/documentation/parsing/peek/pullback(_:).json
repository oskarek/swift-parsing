{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pullback","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO8PullbackV","kind":"typeIdentifier","text":"Pullback"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":">"}],"title":"pullback(_:)","extendedModule":"Parsing","roleHeading":"Instance Method","externalID":"s:7Parsing6ParserPAAE8pullbackyAA7ParsersO8PullbackVy_xqd__Gs15WritableKeyPathCyqd__5InputQzGlF::SYNTHESIZED::s:7Parsing4PeekV","modules":[{"name":"Parsing"}],"symbolKind":"method","role":"symbol"},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek\/pullback(_:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek\/Parser-Implementations"]]},"abstract":[{"type":"text","text":"Transforms the "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" of a parser."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/peek\/pullback(_:)"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pullback"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewInput"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"keyPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":">) -> "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO8PullbackV","text":"Pullback"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":">"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A key path to pull parsing back along from this parser’s input to a new","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"type":"paragraph"}],"name":"keyPath"}]},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser that parses new input."}]}],"kind":"content"},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"text":"This operator allows you to transform a parser of ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":"s into one on ","type":"text"},{"code":"NewInput","type":"codeVoice"},{"type":"text","text":"s, via a"},{"type":"text","text":" "},{"type":"text","text":"writable key path from "},{"type":"codeVoice","code":"NewInput"},{"type":"text","text":" to "},{"type":"codeVoice","code":"Input"},{"type":"text","text":". Intuitively you can think of this as a way of"},{"type":"text","text":" "},{"type":"text","text":"transforming a parser on local data into one on more global data."}],"type":"paragraph"},{"inlineContent":[{"text":"For example, the parser ","type":"text"},{"code":"Int.parser()","type":"codeVoice"},{"text":" parses ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":" collections into integers,","type":"text"},{"text":" ","type":"text"},{"text":"and there’s a key path from ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":", and so we can ","type":"text"},{"code":"pullback","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["var input = \"123 Hello world\"[...]","let output = try Int.parser().pullback(\\.utf8).parse(&input)  \/\/ 123","input                                                         \/\/ \" Hello world\""],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"This has allowed us to parse ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":"s with something that is only defined on","type":"text"},{"text":" ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Peek/Parser-Implementations":{"type":"topic","abstract":[],"url":"\/documentation\/parsing\/peek\/parser-implementations","title":"Parser Implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek\/Parser-Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Peek/pullback(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pullback"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewInput"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO8PullbackV","kind":"typeIdentifier","text":"Pullback"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":">"}],"title":"pullback(_:)","role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Transforms the "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" of a parser."}],"url":"\/documentation\/parsing\/peek\/pullback(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek\/pullback(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pullback":{"role":"symbol","url":"\/documentation\/parsing\/parsers\/pullback","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","navigatorTitle":[{"kind":"identifier","text":"Pullback"}],"title":"Parsers.Pullback","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pullback"}],"kind":"symbol","abstract":[{"text":"Transforms the ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" of a downstream parser.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Peek":{"abstract":[{"text":"A parser that runs the given parser, but does not consume any input.","type":"text"}],"url":"\/documentation\/parsing\/peek","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Peek","kind":"identifier"}],"navigatorTitle":[{"text":"Peek","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek","role":"symbol","title":"Peek"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"title":"Parsers","url":"\/documentation\/parsing\/parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","url":"\/documentation\/parsing\/parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic"}}}