{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/zipvvvovv\/parse(_:)"]}],"abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"metadata":{"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing13ParserBuilderO9ZipVVVOVVV5parsey6OutputQy1_5InputQzzKF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"title":"parse(_:)"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVOVV\/parse(_:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVOVV"]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"input"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A nebulous, mutable piece of data to be incrementally parsed."}]}],"name":"input"}],"kind":"parameters"},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A more well-structured value parsed from the given input."}]}],"kind":"content"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"title":"Parse","url":"\/documentation\/parsing\/parse","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parse"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parse"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"title":"ParserBuilder","url":"\/documentation\/parsing\/parserbuilder","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVVOVV":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipVVVOVV","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVOVV","kind":"symbol","abstract":[],"type":"topic","navigatorTitle":[{"text":"ZipVVVOVV","kind":"identifier"}],"title":"ParserBuilder.ZipVVVOVV","url":"\/documentation\/parsing\/parserbuilder\/zipvvvovv"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVVOVV/parse(_:)":{"url":"\/documentation\/parsing\/parserbuilder\/zipvvvovv\/parse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVOVV\/parse(_:)","type":"topic","role":"symbol","title":"parse(_:)","kind":"symbol","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"P3","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","url":"\/documentation\/parsing\/parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic"}}}