{"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use 'From(.utf8)' instead."}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View\/utf8Parser"},"metadata":{"symbolKind":"property","role":"symbol","roleHeading":"Instance Property","modules":[{"name":"Parsing"}],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"utf8Parser","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UTF8Parser","kind":"typeIdentifier"}],"title":"utf8Parser","platforms":[],"externalID":"s:7Parsing12FromUTF8ViewV10utf8Parserq_vp"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"utf8Parser","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UTF8Parser","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/fromutf8view\/utf8parser"]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/FromUTF8View/utf8Parser":{"kind":"symbol","type":"topic","title":"utf8Parser","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"utf8Parser","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UTF8Parser","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/fromutf8view\/utf8parser","role":"symbol","deprecated":true,"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View\/utf8Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/FromUTF8View":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View","title":"FromUTF8View","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FromUTF8View"}],"type":"topic","deprecated":true,"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FromUTF8View"}],"kind":"symbol","url":"\/documentation\/parsing\/fromutf8view"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","url":"\/documentation\/parsing\/parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic"}}}