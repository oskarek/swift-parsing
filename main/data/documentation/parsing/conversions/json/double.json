{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"double","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions"},{"text":".","kind":"text"},{"text":"Map","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Map"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint","preciseIdentifier":"s:7Parsing11ConversionsO38FixedWidthIntegerToBinaryFloatingPointV","text":"FixedWidthIntegerToBinaryFloatingPoint","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":">> { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A fluent version of "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/double-swift.type.property","type":"reference","isActive":true},{"type":"text","text":". Equivalent to calling"},{"type":"text","text":" "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/JSON\/map(_:)","type":"reference","isActive":true},{"type":"text","text":" with "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/double-swift.type.property","type":"reference","isActive":true},{"type":"text","text":":"}]},{"type":"codeListing","code":["intConversion.double","\/\/ =","intConversion.map(.double)"],"syntax":"swift"}],"kind":"content"}],"kind":"symbol","metadata":{"modules":[{"name":"Parsing"}],"symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"double","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO3MapV","text":"Map","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO38FixedWidthIntegerToBinaryFloatingPointV","text":"FixedWidthIntegerToBinaryFloatingPoint","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"title":"double","externalID":"s:7Parsing10ConversionPAASi6OutputRtzrlE6doubleAA11ConversionsO3MapVy_xAH38FixedWidthIntegerToBinaryFloatingPointVy_SiSdGGvp::SYNTHESIZED::s:7Parsing11ConversionsO4JSONV","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Int"},{"type":"text","text":"."}]},"role":"symbol","extendedModule":"Parsing","roleHeading":"Instance Property"},"variants":[{"paths":["\/documentation\/parsing\/conversions\/json\/double"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Transforms this conversion to "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" into a conversion to "},{"code":"Double","type":"codeVoice"},{"type":"text","text":"."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/JSON","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/JSON\/Conversion-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/JSON\/double"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Map":{"navigatorTitle":[{"kind":"identifier","text":"Map"}],"url":"\/documentation\/parsing\/conversions\/map","type":"topic","title":"Conversions.Map","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Map","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}],"abstract":[{"type":"text","text":"A conversion that composes two conversions together by composing their"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)","isActive":true},{"type":"text","text":" functions and "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/unapply(_:)","isActive":true},{"type":"text","text":" functions together."}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"kind":"symbol","url":"\/documentation\/parsing\/conversions","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversions"}],"navigatorTitle":[{"kind":"identifier","text":"Conversions"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"title":"Conversions","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/JSON/Conversion-Implementations":{"title":"Conversion Implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/JSON\/Conversion-Implementations","kind":"article","abstract":[],"role":"collectionGroup","type":"topic","url":"\/documentation\/parsing\/conversions\/json\/conversion-implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/unapply(_:)":{"kind":"symbol","url":"\/documentation\/parsing\/conversion\/unapply(_:)","required":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/unapply(_:)","title":"unapply(_:)","abstract":[{"text":"Attempts to transform an output back into an input.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unapply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/JSON":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/JSON","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"JSON"}],"title":"Conversions.JSON","url":"\/documentation\/parsing\/conversions\/json","abstract":[{"type":"text","text":"A conversion from "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" to some codable type."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSON"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FixedWidthIntegerToBinaryFloatingPoint":{"type":"topic","abstract":[{"text":"A conversion from an ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" to a ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/parsing\/conversions\/fixedwidthintegertobinaryfloatingpoint","title":"Conversions.FixedWidthIntegerToBinaryFloatingPoint","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FixedWidthIntegerToBinaryFloatingPoint"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FixedWidthIntegerToBinaryFloatingPoint"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/double-swift.type.property":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/double-swift.type.property","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Conversions.FixedWidthIntegerToBinaryFloatingPoint<Int, Double>"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"double","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"FixedWidthIntegerToBinaryFloatingPoint","preciseIdentifier":"s:7Parsing11ConversionsO38FixedWidthIntegerToBinaryFloatingPointV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"A conversion from an "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" to a "},{"type":"codeVoice","code":"Double"},{"type":"text","text":"."}],"role":"symbol","title":"double","type":"topic","url":"\/documentation\/parsing\/conversion\/double-swift.type.property"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/JSON/double":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Int"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/parsing\/conversions\/json\/double","kind":"symbol","abstract":[{"text":"Transforms this conversion to ","type":"text"},{"code":"Int","type":"codeVoice"},{"type":"text","text":" into a conversion to "},{"type":"codeVoice","code":"Double"},{"type":"text","text":"."}],"title":"double","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"double"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FixedWidthIntegerToBinaryFloatingPoint","preciseIdentifier":"s:7Parsing11ConversionsO38FixedWidthIntegerToBinaryFloatingPointV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":">>"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/JSON\/double"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/JSON/map(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/JSON\/map(_:)","url":"\/documentation\/parsing\/conversions\/json\/map(_:)","kind":"symbol","role":"symbol","title":"map(_:)","abstract":[{"type":"text","text":"Returns a conversion that transforms the output of this conversion with a given downstream"},{"type":"text","text":" "},{"type":"text","text":"conversion."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"Map","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/apply(_:)":{"kind":"symbol","url":"\/documentation\/parsing\/conversion\/apply(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"apply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)","abstract":[{"text":"Attempts to transform an input into an output.","type":"text"}],"title":"apply(_:)","required":true,"type":"topic"}}}