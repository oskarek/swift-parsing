{"sections":[],"variants":[{"paths":["\/documentation\/parsing\/fromunicodescalarview\/fromunicodescalars"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Instance Property","symbolKind":"property","role":"symbol","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing21FromUnicodeScalarViewV04fromC7ScalarsyxSs0cdE0Vcvp","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"fromUnicodeScalars"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Ss17UnicodeScalarViewV","kind":"typeIdentifier","text":"UnicodeScalarView"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"}],"platforms":[],"title":"fromUnicodeScalars"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView\/fromUnicodeScalars"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView"]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use 'From(.unicodeScalars)' instead."}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fromUnicodeScalars","kind":"identifier"},{"text":": (","kind":"text"},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"},{"text":".","kind":"text"},{"text":"UnicodeScalarView","kind":"typeIdentifier","preciseIdentifier":"s:Ss17UnicodeScalarViewV"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/FromUnicodeScalarView/fromUnicodeScalars":{"kind":"symbol","url":"\/documentation\/parsing\/fromunicodescalarview\/fromunicodescalars","abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView\/fromUnicodeScalars","type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fromUnicodeScalars","kind":"identifier"},{"text":": (","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UnicodeScalarView","preciseIdentifier":"s:Ss17UnicodeScalarViewV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"title":"fromUnicodeScalars","deprecated":true},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","url":"\/documentation\/parsing\/parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/FromUnicodeScalarView":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView","title":"FromUnicodeScalarView","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FromUnicodeScalarView"}],"type":"topic","deprecated":true,"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FromUnicodeScalarView"}],"kind":"symbol","url":"\/documentation\/parsing\/fromunicodescalarview"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","type":"topic"}}}