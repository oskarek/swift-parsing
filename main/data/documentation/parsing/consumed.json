{"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Consumed"},{"kind":"text","text":"<"},{"text":"Upstream","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP"},{"text":", ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sl","kind":"typeIdentifier","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"languages":["swift"],"platforms":["Linux"]}]}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Int","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Digits","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/String","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Bool","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Float","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CharacterSet","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/UUID","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CaseIterable","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Optionally","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/From","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Stream"],"title":"Common parsers"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/upstream"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/parse(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/ParserPrinter-Implementations"],"title":"Default Implementations"}],"metadata":{"symbolKind":"struct","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Consumed"}],"externalID":"s:7Parsing8ConsumedV","navigatorTitle":[{"kind":"identifier","text":"Consumed"}],"role":"symbol","modules":[{"name":"Parsing"}],"title":"Consumed"},"kind":"symbol","relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To"}],"variants":[{"paths":["\/documentation\/parsing\/consumed"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"abstract":[{"type":"text","text":"A parser that returns the subsequence of input consumed by another parser."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/End":{"abstract":[{"type":"text","text":"A parser that succeeds if the input is empty, and fails otherwise."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","type":"topic","url":"\/documentation\/parsing\/end","navigatorTitle":[{"kind":"identifier","text":"End"}],"title":"End","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixUpTo"}],"role":"symbol","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"url":"\/documentation\/parsing\/prefixupto","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PrefixUpTo"}],"type":"topic","title":"PrefixUpTo","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo"},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed/ParserPrinter-Implementations":{"abstract":[],"type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/consumed\/parserprinter-implementations","title":"ParserPrinter Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/First":{"navigatorTitle":[{"text":"First","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/first","abstract":[{"text":"A parser that consumes the first element from a collection.","type":"text"}],"kind":"symbol","type":"topic","title":"First","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith":{"abstract":[{"type":"text","text":"A parser that parses a sequence of elements from its input."}],"url":"\/documentation\/parsing\/startswith","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","navigatorTitle":[{"kind":"identifier","text":"StartsWith"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StartsWith"}],"title":"StartsWith","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/CharacterSet":{"abstract":[{"text":"A parser that consumes the characters contained in a ","type":"text"},{"type":"codeVoice","code":"CharacterSet"},{"text":" from the beginning of a string.","type":"text"}],"url":"\/documentation\/parsing\/characterset","kind":"article","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CharacterSet","role":"article","title":"CharacterSet"},"doc://co.pointfree.Parsing/documentation/Parsing/Stream":{"navigatorTitle":[{"text":"Stream","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Stream","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/stream","abstract":[{"text":"A parser that can parse streams of input.","type":"text"}],"kind":"symbol","type":"topic","title":"Stream","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Stream"},"doc://co.pointfree.Parsing/documentation/Parsing/Rest":{"url":"\/documentation\/parsing\/rest","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"}],"title":"Rest","abstract":[{"text":"A parser that consumes everything to the end of the collection and returns this subsequence as","type":"text"},{"text":" ","type":"text"},{"text":"its output.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Rest"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Digits":{"abstract":[{"type":"text","text":"A parser that consumes a number of digits from the beginning of a collection of UTF-8 code"},{"type":"text","text":" "},{"type":"text","text":"units."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Digits","type":"topic","url":"\/documentation\/parsing\/digits","navigatorTitle":[{"kind":"identifier","text":"Digits"}],"title":"Digits","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Digits"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOf":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOf"}],"role":"symbol","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers till one succeeds."}],"url":"\/documentation\/parsing\/oneof","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"OneOf"}],"type":"topic","title":"OneOf","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy/parse(_:)":{"role":"symbol","url":"\/documentation\/parsing\/lazy\/parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"LazyParser"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"LazyParser"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"title":"parse(_:)","type":"topic","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/CaseIterable":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CaseIterable","title":"CaseIterable","abstract":[{"type":"text","text":"A parser-printer that consumes a case-iterable, raw representable value from the beginning of a"},{"type":"text","text":" "},{"type":"text","text":"string."}],"role":"article","type":"topic","kind":"article","url":"\/documentation\/parsing\/caseiterable"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Float":{"role":"article","url":"\/documentation\/parsing\/float","abstract":[{"text":"A parser that consumes a floating-point number from the beginning of a string.","type":"text"}],"kind":"article","type":"topic","title":"Float","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Float"},"doc://co.pointfree.Parsing/documentation/Parsing/Int":{"role":"article","url":"\/documentation\/parsing\/int","abstract":[{"text":"A parser that consumes an integer from the beginning of a string.","type":"text"}],"kind":"article","type":"topic","title":"Int","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Int"},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed/upstream":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/upstream","type":"topic","title":"upstream","abstract":[],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"upstream","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/consumed\/upstream"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"navigatorTitle":[{"text":"Newline","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"role":"symbol","deprecated":true,"url":"\/documentation\/parsing\/newline","abstract":[],"kind":"symbol","type":"topic","title":"Newline","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline"},"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"kind":"symbol","url":"\/documentation\/parsing\/skip","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Skip","kind":"identifier"}],"type":"topic","abstract":[{"text":"A parser that discards the output of another parser.","type":"text"}],"title":"Skip","navigatorTitle":[{"text":"Skip","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip"},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed/Parser-Implementations":{"url":"\/documentation\/parsing\/consumed\/parser-implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/Parser-Implementations","type":"topic","title":"Parser Implementations","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"title":"Prefix","url":"\/documentation\/parsing\/prefix","type":"topic","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/UUID":{"title":"UUID","abstract":[{"text":"A parser that consumes a ","type":"text"},{"type":"codeVoice","code":"UUID"},{"text":" value from the beginning of a string.","type":"text"}],"url":"\/documentation\/parsing\/uuid","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/UUID","type":"topic","role":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed/init(_:)":{"type":"topic","abstract":[],"title":"init(_:)","role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/init(_:)","url":"\/documentation\/parsing\/consumed\/init(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/From":{"abstract":[],"url":"\/documentation\/parsing\/from","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/From","navigatorTitle":[{"text":"From","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"From","kind":"identifier"}],"title":"From","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail":{"navigatorTitle":[{"text":"Fail","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/fail","abstract":[{"text":"A parser that always fails, no matter the input.","type":"text"}],"kind":"symbol","type":"topic","title":"Fail","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail"},"doc://co.pointfree.Parsing/documentation/Parsing/FromUTF8View":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View","title":"FromUTF8View","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FromUTF8View"}],"type":"topic","deprecated":true,"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FromUTF8View"}],"kind":"symbol","url":"\/documentation\/parsing\/fromutf8view"},"doc://co.pointfree.Parsing/documentation/Parsing/Not":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Not","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A parser that succeeds if the given parser fails, and does not consume any input.","type":"text"}],"role":"symbol","title":"Not","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not","url":"\/documentation\/parsing\/not","navigatorTitle":[{"text":"Not","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed/parse(_:)":{"title":"parse(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/parse(_:)","url":"\/documentation\/parsing\/consumed\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Bool":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Bool","title":"Bool","abstract":[{"type":"text","text":"A parser that consumes a Boolean value from the beginning of a string."}],"role":"article","type":"topic","kind":"article","url":"\/documentation\/parsing\/bool"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"title":"Parse","url":"\/documentation\/parsing\/parse","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parse"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parse"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Always":{"abstract":[{"type":"text","text":"A parser that always succeeds with the given value, and does not consume any input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","type":"topic","url":"\/documentation\/parsing\/always","navigatorTitle":[{"kind":"identifier","text":"Always"}],"title":"Always","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Always"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy":{"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/lazy","navigatorTitle":[{"text":"Lazy","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Lazy","kind":"identifier"}],"abstract":[{"text":"A parser that waits for a call to its ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)"},{"text":" method before running the given closure to","type":"text"},{"text":" ","type":"text"},{"text":"create a parser for the given input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","role":"symbol","title":"Lazy"},"doc://co.pointfree.Parsing/documentation/Parsing/Optionally":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optionally","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Optionally","role":"symbol","navigatorTitle":[{"text":"Optionally","kind":"identifier"}],"abstract":[{"text":"A parser that runs the given parser and succeeds with ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if it fails.","type":"text"}],"url":"\/documentation\/parsing\/optionally","title":"Optionally"},"doc://co.pointfree.Parsing/documentation/Parsing/Peek":{"abstract":[{"text":"A parser that runs the given parser, but does not consume any input.","type":"text"}],"url":"\/documentation\/parsing\/peek","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Peek","kind":"identifier"}],"navigatorTitle":[{"text":"Peek","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek","role":"symbol","title":"Peek"},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed":{"type":"topic","abstract":[{"text":"A parser that returns the subsequence of input consumed by another parser.","type":"text"}],"title":"Consumed","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Consumed"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Consumed"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed","url":"\/documentation\/parsing\/consumed"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough":{"navigatorTitle":[{"text":"PrefixThrough","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixThrough","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/prefixthrough","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input through a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"kind":"symbol","type":"topic","title":"PrefixThrough","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"abstract":[{"type":"text","text":"A parser that consumes whitespace from the beginning of input."}],"url":"\/documentation\/parsing\/whitespace","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","navigatorTitle":[{"kind":"identifier","text":"Whitespace"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Whitespace"}],"title":"Whitespace","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring","title":"FromSubstring","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FromSubstring"}],"type":"topic","deprecated":true,"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FromSubstring"}],"kind":"symbol","url":"\/documentation\/parsing\/fromsubstring"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"role":"symbol","navigatorTitle":[{"text":"AnyParser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"A type-erased parser of ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" from ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":".","type":"text"}],"title":"AnyParser","url":"\/documentation\/parsing\/anyparser"},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Many","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"title":"Many","type":"topic","url":"\/documentation\/parsing\/many","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","abstract":[{"text":"A parser that attempts to run another parser as many times as specified, accumulating the result","type":"text"},{"text":" ","type":"text"},{"text":"of the outputs.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/FromUnicodeScalarView":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView","title":"FromUnicodeScalarView","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FromUnicodeScalarView"}],"type":"topic","deprecated":true,"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FromUnicodeScalarView"}],"kind":"symbol","url":"\/documentation\/parsing\/fromunicodescalarview"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","url":"\/documentation\/parsing\/parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","url":"\/documentation\/parsing\/parserprinter","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"title":"ParserPrinter","kind":"symbol","abstract":[{"type":"text","text":"A "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","isActive":true},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Upstream"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Upstream.Input"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"PrependableCollection"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Upstream.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Upstream.Input.SubSequence"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}]},"doc://co.pointfree.Parsing/documentation/Parsing/String":{"title":"String","abstract":[{"text":"A parser that consumes a string literal from the beginning of a string.","type":"text"}],"url":"\/documentation\/parsing\/string","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/String","type":"topic","role":"article"}}}