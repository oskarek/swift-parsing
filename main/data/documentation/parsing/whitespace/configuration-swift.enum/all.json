{"metadata":{"symbolKind":"case","role":"symbol","roleHeading":"Case","title":"Whitespace.Configuration.all","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"all"}],"externalID":"s:7Parsing10WhitespaceV13ConfigurationO3allyAEyxq__GAGmAA13CountingRangeRzAA10ConversionR_Sl5InputRp_AJ_11SubSequenceQY_AKRSSl6OutputRp_AN_ALQY_AORSs5UInt8VAN_7ElementRT_r0_lF","modules":[{"name":"Parsing"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/Configuration-swift.enum"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/Configuration-swift.enum\/all"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"all"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/whitespace\/configuration-swift.enum\/all"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace/Configuration-swift.enum/all":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"all"}],"type":"topic","url":"\/documentation\/parsing\/whitespace\/configuration-swift.enum\/all","kind":"symbol","title":"Whitespace.Configuration.all","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/Configuration-swift.enum\/all","abstract":[],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace/Configuration-swift.enum":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Configuration","kind":"identifier"}],"kind":"symbol","abstract":[],"role":"symbol","title":"Whitespace.Configuration","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/Configuration-swift.enum","url":"\/documentation\/parsing\/whitespace\/configuration-swift.enum","navigatorTitle":[{"text":"Configuration","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","url":"\/documentation\/parsing\/parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"abstract":[{"type":"text","text":"A parser that consumes whitespace from the beginning of input."}],"url":"\/documentation\/parsing\/whitespace","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","navigatorTitle":[{"kind":"identifier","text":"Whitespace"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Whitespace"}],"title":"Whitespace","kind":"symbol","role":"symbol"}}}