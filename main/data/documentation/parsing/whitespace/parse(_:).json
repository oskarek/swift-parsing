{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/whitespace\/parse(_:)"]}],"kind":"symbol","metadata":{"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"symbolKind":"method","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing10WhitespaceV5parseyy5InputQy_zKF","role":"symbol","title":"parse(_:)"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/parse(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"input","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"input","content":[{"inlineContent":[{"type":"text","text":"A nebulous, mutable piece of data to be incrementally parsed."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"text":"A more well-structured value parsed from the given input.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"abstract":[{"type":"text","text":"A parser that consumes whitespace from the beginning of input."}],"url":"\/documentation\/parsing\/whitespace","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","navigatorTitle":[{"kind":"identifier","text":"Whitespace"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Whitespace"}],"title":"Whitespace","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace/parse(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","url":"\/documentation\/parsing\/whitespace\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"type":"text","text":" "},{"type":"text","text":"input."}],"kind":"symbol","type":"topic","title":"parse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","url":"\/documentation\/parsing\/parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic"}}}