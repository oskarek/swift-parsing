{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PipeEnd","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PipeEnd\/Parser-Implementations"]]},"abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser into a new parser."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewParser"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewParser"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV","text":"FlatMap"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewParser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"NewParser"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP","text":"Parser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"NewParser"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that transforms values of this parserâ€™s output and returns a","type":"text"},{"text":" ","type":"text"},{"text":"new parser.","type":"text"}]}],"name":"transform"}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser that transforms output from an upstream parser into a new parser."}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This method is similar to ","type":"text"},{"type":"codeVoice","code":"Sequence.flatMap"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Optional.flatMap"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Result.flatMap"},{"text":" in the","type":"text"},{"text":" ","type":"text"},{"text":"Swift standard library, as well as ","type":"text"},{"type":"codeVoice","code":"Publisher.flatMap"},{"text":" in the Combine framework.","type":"text"}]},{"type":"heading","level":2,"anchor":"Printability","text":"Printability"},{"type":"paragraph","inlineContent":[{"code":"Parser.flatMap","type":"codeVoice"},{"text":" is ","type":"text"},{"inlineContent":[{"type":"text","text":"not"}],"type":"emphasis"},{"text":" printable, as the logic contained inside its transform operation to","type":"text"},{"text":" ","type":"text"},{"text":"some new parser is not reversible.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"If you are building a parser-printer, avoid uses of ","type":"text"},{"code":"flatMap","type":"codeVoice"},{"text":" and instead prefer the use of","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-4hsj5","isActive":true,"type":"reference"},{"text":" with conversions that preserve printability.","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/pipeend\/flatmap(_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PipeEnd\/flatMap(_:)"},"metadata":{"extendedModule":"Parsing","symbolKind":"method","modules":[{"name":"Parsing"}],"role":"symbol","title":"flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewParser"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewParser"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV","kind":"typeIdentifier","text":"FlatMap"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewParser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","externalID":"s:7Parsing6ParserPAAE7flatMapyAA7ParsersO04FlatD0Vy_qd__xGqd__6OutputQzcAaBRd__5InputQyd__ALRtzlF::SYNTHESIZED::s:7Parsing7ParsersO7PipeEndV"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PipeEnd":{"role":"symbol","navigatorTitle":[{"text":"PipeEnd","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PipeEnd","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PipeEnd","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[],"title":"Parsers.PipeEnd","url":"\/documentation\/parsing\/parsers\/pipeend"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"title":"Parsers","url":"\/documentation\/parsing\/parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/map(_:)-4hsj5":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-4hsj5","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Map","preciseIdentifier":"s:7Parsing7ParsersO3MapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser with a given closure."}],"kind":"symbol","title":"map(_:)","role":"symbol","url":"\/documentation\/parsing\/parser\/map(_:)-4hsj5"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FlatMap":{"title":"Parsers.FlatMap","url":"\/documentation\/parsing\/parsers\/flatmap","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","abstract":[{"type":"text","text":"A parser that transforms the output of another parser into a new parser."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatMap"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FlatMap"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PipeEnd/Parser-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PipeEnd\/Parser-Implementations","type":"topic","kind":"article","abstract":[],"title":"Parser Implementations","url":"\/documentation\/parsing\/parsers\/pipeend\/parser-implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PipeEnd/flatMap(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"FlatMap","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","title":"flatMap(_:)","abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser into a new parser."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PipeEnd\/flatMap(_:)","kind":"symbol","url":"\/documentation\/parsing\/parsers\/pipeend\/flatmap(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","url":"\/documentation\/parsing\/parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic"}}}