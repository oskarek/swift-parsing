{"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/parse(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/ParserPrinter-Implementations"],"title":"Default Implementations"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/uuidparser"]}],"metadata":{"role":"symbol","externalID":"s:7Parsing7ParsersO10UUIDParserV","symbolKind":"struct","navigatorTitle":[{"text":"UUIDParser","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UUIDParser","kind":"identifier"}],"roleHeading":"Structure","modules":[{"name":"Parsing"}],"extendedModule":"Parsing","title":"Parsers.UUIDParser"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UUIDParser"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Collection","preciseIdentifier":"s:Sl"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"UTF8","preciseIdentifier":"s:s4UTF8a","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"CodeUnit","preciseIdentifier":"s:s7UnicodeO4UTF8O8CodeUnita","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"You will not typically need to interact with this type directly. Instead you will usually use"},{"type":"text","text":" "},{"type":"codeVoice","code":"UUID.parser()"},{"type":"text","text":", which constructs this type."}],"type":"paragraph"}]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A parser that consumes a UUID from the beginning of a collection of UTF8 code units."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser/Parser-Implementations":{"abstract":[],"type":"topic","url":"\/documentation\/parsing\/parsers\/uuidparser\/parser-implementations","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/Parser-Implementations","role":"collectionGroup","title":"Parser Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"title":"ParserPrinter","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","abstract":[{"type":"text","text":"A "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"PrependableCollection"},{"type":"text","text":", "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Input.Element"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UTF8.CodeUnit"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/parsing\/parserprinter","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser/init()":{"role":"symbol","url":"\/documentation\/parsing\/parsers\/uuidparser\/init()","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[],"title":"init()","kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser/parse(_:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4UUIDV","text":"UUID","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/uuidparser\/parse(_:)","type":"topic","title":"parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser/ParserPrinter-Implementations":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/ParserPrinter-Implementations","type":"topic","url":"\/documentation\/parsing\/parsers\/uuidparser\/parserprinter-implementations","title":"ParserPrinter Implementations","kind":"article","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"title":"Parsers","url":"\/documentation\/parsing\/parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","url":"\/documentation\/parsing\/parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser":{"abstract":[{"text":"A parser that consumes a UUID from the beginning of a collection of UTF8 code units.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser","type":"topic","url":"\/documentation\/parsing\/parsers\/uuidparser","navigatorTitle":[{"text":"UUIDParser","kind":"identifier"}],"title":"Parsers.UUIDParser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UUIDParser","kind":"identifier"}],"kind":"symbol","role":"symbol"}}}