{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers"]}],"abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"metadata":{"role":"symbol","modules":[{"name":"Parsing"}],"roleHeading":"Enumeration","symbolKind":"enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"externalID":"s:7Parsing7ParsersO","title":"Parsers"},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Identity","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConstant","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConversion","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OverridePrinting","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PipeEnd","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Print","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/TryPrint","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser"],"title":"Structures"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Lazy","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Many","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixThrough","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/StartsWith","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Whitespace"],"title":"Type Aliases"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional"],"title":"Enumerations"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The various operators defined as extensions on ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"text":" implement their functionality as","type":"text"},{"text":" ","type":"text"},{"text":"classes or structures that extend this enumeration. For example, the ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-4hsj5","isActive":true},{"text":" ","type":"text"},{"text":"operator returns a ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","isActive":true},{"text":" parser.","type":"text"}]}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/End":{"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/End","kind":"symbol","url":"\/documentation\/parsing\/parsers\/end","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"}],"abstract":[],"title":"Parsers.End","navigatorTitle":[{"text":"End","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Lazy":{"navigatorTitle":[{"text":"Lazy","kind":"identifier"}],"abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Lazy","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Lazy","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/parsing\/parsers\/lazy","title":"Parsers.Lazy"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"title":"Parsers","url":"\/documentation\/parsing\/parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PrefixThrough":{"url":"\/documentation\/parsing\/parsers\/prefixthrough","type":"topic","role":"symbol","title":"Parsers.PrefixThrough","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixThrough","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixThrough"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"PrefixThrough"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OverridePrinting":{"abstract":[{"text":"A parser-printer that parses with the given parser and prints with the given parser-printer.","type":"text"}],"navigatorTitle":[{"text":"OverridePrinting","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OverridePrinting","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OverridePrinting","kind":"identifier"}],"role":"symbol","type":"topic","title":"Parsers.OverridePrinting","url":"\/documentation\/parsing\/parsers\/overrideprinting"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PipeEnd":{"role":"symbol","navigatorTitle":[{"text":"PipeEnd","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PipeEnd","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PipeEnd","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[],"title":"Parsers.PipeEnd","url":"\/documentation\/parsing\/parsers\/pipeend"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pullback":{"role":"symbol","url":"\/documentation\/parsing\/parsers\/pullback","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","navigatorTitle":[{"kind":"identifier","text":"Pullback"}],"title":"Parsers.Pullback","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pullback"}],"kind":"symbol","abstract":[{"text":"Transforms the ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" of a downstream parser.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Always":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Always"}],"url":"\/documentation\/parsing\/parsers\/always","type":"topic","title":"Parsers.Always","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Always"}],"abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Always"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PrefixUpTo":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixUpTo"}],"abstract":[],"role":"symbol","title":"Parsers.PrefixUpTo","navigatorTitle":[{"kind":"identifier","text":"PrefixUpTo"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixUpTo","kind":"symbol","url":"\/documentation\/parsing\/parsers\/prefixupto"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Newline":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Newline","type":"topic","kind":"symbol","title":"Parsers.Newline","navigatorTitle":[{"kind":"identifier","text":"Newline"}],"url":"\/documentation\/parsing\/parsers\/newline","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Newline"}],"abstract":[],"deprecated":true},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Filter":{"url":"\/documentation\/parsing\/parsers\/filter","type":"topic","title":"Parsers.Filter","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","role":"symbol","abstract":[{"type":"text","text":"A parser that filters the output of an upstream parser when it does not satisfy a predicate."}],"navigatorTitle":[{"kind":"identifier","text":"Filter"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Filter"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Print":{"role":"symbol","navigatorTitle":[{"text":"Print","kind":"identifier"}],"title":"Parsers.Print","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Print","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Print","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parsers\/print"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Identity":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Identity","url":"\/documentation\/parsing\/parsers\/identity","type":"topic","navigatorTitle":[{"text":"Identity","kind":"identifier"}],"title":"Parsers.Identity","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Identity","kind":"identifier"}],"abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Rest":{"url":"\/documentation\/parsing\/parsers\/rest","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Rest","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"}],"title":"Parsers.Rest","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Rest"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/TryPrint":{"type":"topic","url":"\/documentation\/parsing\/parsers\/tryprint","kind":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"TryPrint"}],"role":"symbol","title":"Parsers.TryPrint","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TryPrint"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/TryPrint"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/map(_:)-4hsj5":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-4hsj5","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Map","preciseIdentifier":"s:7Parsing7ParsersO3MapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser with a given closure."}],"kind":"symbol","title":"map(_:)","role":"symbol","url":"\/documentation\/parsing\/parser\/map(_:)-4hsj5"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/MapConstant":{"role":"symbol","url":"\/documentation\/parsing\/parsers\/mapconstant","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConstant","navigatorTitle":[{"kind":"identifier","text":"MapConstant"}],"title":"Parsers.MapConstant","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MapConstant"}],"kind":"symbol","abstract":[{"type":"text","text":"A parser that replaces another parser’s "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" output with some new output."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser":{"kind":"symbol","url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseIterableRawRepresentableParser"}],"type":"topic","abstract":[],"title":"Parsers.CaseIterableRawRepresentableParser","navigatorTitle":[{"kind":"identifier","text":"CaseIterableRawRepresentableParser"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FloatParser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatParser","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"FloatParser","kind":"identifier"}],"abstract":[{"text":"A parser that consumes a floating-point number from the beginning of a collection of UTF-8","type":"text"},{"type":"text","text":" "},{"type":"text","text":"code units."}],"title":"Parsers.FloatParser","type":"topic","url":"\/documentation\/parsing\/parsers\/floatparser","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/BoolParser":{"abstract":[{"type":"text","text":"A parser that consumes a Boolean value from the beginning of a collection of UTF-8 code units."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","type":"topic","url":"\/documentation\/parsing\/parsers\/boolparser","navigatorTitle":[{"kind":"identifier","text":"BoolParser"}],"title":"Parsers.BoolParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BoolParser"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ReplaceError":{"title":"Parsers.ReplaceError","url":"\/documentation\/parsing\/parsers\/replaceerror","abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReplaceError"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ReplaceError"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","title":"Parsers.IntParser","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IntParser"}],"abstract":[{"type":"text","text":"A parser that consumes an integer (with an optional leading "},{"type":"codeVoice","code":"+"},{"type":"text","text":" or "},{"type":"codeVoice","code":"-"},{"type":"text","text":" sign for signed integer"},{"type":"text","text":" "},{"type":"text","text":"types) from the beginning of a collection of UTF8 code units."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntParser"}],"url":"\/documentation\/parsing\/parsers\/intparser","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/MapConversion":{"kind":"symbol","url":"\/documentation\/parsing\/parsers\/mapconversion","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConversion","title":"Parsers.MapConversion","abstract":[{"text":"A parser that transforms the output of another parser with a given conversion.","type":"text"}],"navigatorTitle":[{"text":"MapConversion","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MapConversion","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","url":"\/documentation\/parsing\/parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany":{"kind":"symbol","type":"topic","abstract":[{"text":"A parser that attempts to run a number of parsers till one succeeds.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"OneOfMany"}],"title":"Parsers.OneOfMany","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOfMany"}],"url":"\/documentation\/parsing\/parsers\/oneofmany"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe":{"navigatorTitle":[{"kind":"identifier","text":"Pipe"}],"role":"symbol","abstract":[{"type":"text","text":"A parser that runs this parser, pipes its output into the given parser, and returns the output"},{"type":"text","text":" "},{"type":"text","text":"of the given parser."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parsers\/pipe","title":"Parsers.Pipe","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pipe"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Many":{"type":"topic","title":"Parsers.Many","url":"\/documentation\/parsing\/parsers\/many","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Many","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"role":"symbol","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"Many","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalVoid","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","role":"symbol","navigatorTitle":[{"text":"OptionalVoid","kind":"identifier"}],"abstract":[{"text":"A parser that attempts to run a given void parser, succeeding with void.","type":"text"}],"url":"\/documentation\/parsing\/parsers\/optionalvoid","title":"Parsers.OptionalVoid"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser":{"abstract":[{"text":"A parser that consumes a UUID from the beginning of a collection of UTF8 code units.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser","type":"topic","url":"\/documentation\/parsing\/parsers\/uuidparser","navigatorTitle":[{"text":"UUIDParser","kind":"identifier"}],"title":"Parsers.UUIDParser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UUIDParser","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Fail":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"}],"navigatorTitle":[{"text":"Fail","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Fail","url":"\/documentation\/parsing\/parsers\/fail","kind":"symbol","abstract":[],"type":"topic","title":"Parsers.Fail","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Map":{"navigatorTitle":[{"kind":"identifier","text":"Map"}],"type":"topic","abstract":[{"type":"text","text":"A parser that transforms the output of another parser with a given closure."}],"url":"\/documentation\/parsing\/parsers\/map","title":"Parsers.Map","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Skip":{"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Skip","kind":"symbol","url":"\/documentation\/parsing\/parsers\/skip","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Skip"}],"abstract":[],"title":"Parsers.Skip","navigatorTitle":[{"text":"Skip","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CompactMap":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompactMap"}],"navigatorTitle":[{"kind":"identifier","text":"CompactMap"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/compactmap","abstract":[{"type":"text","text":"A parser that outputs the non-"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" result of calling the given transformation with the output"},{"type":"text","text":" "},{"type":"text","text":"of its upstream parser."}],"kind":"symbol","title":"Parsers.CompactMap","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/StartsWith":{"type":"topic","url":"\/documentation\/parsing\/parsers\/startswith","title":"Parsers.StartsWith","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"StartsWith"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/StartsWith","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"StartsWith"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Conditional":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conditional"}],"type":"topic","title":"Parsers.Conditional","url":"\/documentation\/parsing\/parsers\/conditional","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Conditional"}],"abstract":[{"text":"A parser that can parse output from two types of parsers.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/First":{"navigatorTitle":[{"text":"First","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/First","type":"topic","title":"Parsers.First","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parsers\/first","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FlatMap":{"title":"Parsers.FlatMap","url":"\/documentation\/parsing\/parsers\/flatmap","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","abstract":[{"type":"text","text":"A parser that transforms the output of another parser into a new parser."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatMap"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FlatMap"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream":{"abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stream"}],"url":"\/documentation\/parsing\/parsers\/stream","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","type":"topic","title":"Parsers.Stream","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Stream"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Whitespace":{"navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Whitespace","type":"topic","title":"Parsers.Whitespace","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parsers\/whitespace","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/AnyParser":{"navigatorTitle":[{"text":"AnyParser","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/AnyParser","type":"topic","title":"Parsers.AnyParser","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parsers\/anyparser","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Prefix":{"abstract":[],"kind":"symbol","title":"Parsers.Prefix","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Prefix","role":"symbol","url":"\/documentation\/parsing\/parsers\/prefix","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Prefix"}]}}}