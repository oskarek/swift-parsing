{"metadata":{"navigatorTitle":[{"kind":"identifier","text":"ParsePrint"}],"roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ParsePrint"}],"symbolKind":"struct","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing10ParsePrintV","role":"symbol","title":"ParsePrint"},"sections":[],"abstract":[{"text":"An entry to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","type":"reference"},{"text":" syntax that requires the builder to be a printer.","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParsePrint","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ParserPrinters","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ParserPrinters"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"ParserPrinter","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","preciseIdentifier":"s:7Parsing13ParserPrinterP"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"text":"Although you can build printers with the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","isActive":true,"type":"reference"},{"text":" entry point, as long as everything in the","type":"text"},{"text":" ","type":"text"},{"text":"builder context is a printer, it doesn’t proper connote its intentions. By using ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"you can make your intentions clearer:","type":"text"}],"type":"paragraph"},{"code":["let welcoming = ParsePrint {","  \"Hello \"","  Int.parser()","  \"!\"","}","","try welcoming.parse(\"Hello 42!\") \/\/ 42","try welcoming.print(1729) \/\/ \"Hello 1729\""],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"The "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint","type":"reference"},{"type":"text","text":" entry point can also help you catch errors earlier if you accidentally use"},{"type":"text","text":" "},{"type":"text","text":"an operator that is not printer-friendly:"}],"type":"paragraph"},{"code":["let welcoming = ParsePrint {","  \"Hello \"","  Prefix { $0 != \"!\" }.map(String.init)","  \"!\"","}"],"syntax":"swift","type":"codeListing"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Generic struct "},{"type":"codeVoice","code":"ParsePrint"},{"type":"text","text":" requires that "},{"type":"codeVoice","code":"Parsers.Map<Prefix<Substring>, String>"},{"type":"text","text":" conform"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"codeVoice","code":"ParserPrinter"}]}],"type":"aside","style":"note","name":"Note"},{"inlineContent":[{"code":"ParsePrint","type":"codeVoice"},{"type":"text","text":" is a type alias for the "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","isActive":true,"type":"reference"},{"type":"text","text":" parser with its underlying parser constrained to"},{"type":"text","text":" "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parseprint"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(_:with:)-4k2am","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(_:with:)-8nbrc","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(with:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/parserPrinters"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/parse(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/print(_:into:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/ParserPrinter-Implementations"],"title":"Default Implementations"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/init(_:with:)-4k2am":{"role":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(_:with:)-4k2am","type":"topic","title":"init(_:with:)","kind":"symbol","url":"\/documentation\/parsing\/parseprint\/init(_:with:)-4k2am","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Upstream"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Downstream"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":", "},{"text":"with","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/parserPrinters":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/parserPrinters","kind":"symbol","title":"parserPrinters","url":"\/documentation\/parsing\/parseprint\/parserprinters","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"parserPrinters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ParserPrinters"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParsePrint"}],"abstract":[{"type":"text","text":"An entry to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder"},{"type":"text","text":" syntax that requires the builder to be a printer."}],"title":"ParsePrint","url":"\/documentation\/parsing\/parseprint","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParsePrint"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/init(with:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(with:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[],"role":"symbol","title":"init(with:)","type":"topic","url":"\/documentation\/parsing\/parseprint\/init(with:)"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/print(_:into:)":{"role":"symbol","abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data into something more nebulous."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/print(_:into:)","type":"topic","title":"print(_:into:)","kind":"symbol","url":"\/documentation\/parsing\/parseprint\/print(_:into:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ParserPrinters"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/ParserPrinter-Implementations":{"role":"collectionGroup","url":"\/documentation\/parsing\/parseprint\/parserprinter-implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/ParserPrinter-Implementations","type":"topic","title":"ParserPrinter Implementations","abstract":[],"kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/parse(_:)":{"role":"symbol","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/parse(_:)","type":"topic","title":"parse(_:)","kind":"symbol","url":"\/documentation\/parsing\/parseprint\/parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ParserPrinters"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"kind":"symbol","url":"\/documentation\/parsing\/parserprinter","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","title":"ParserPrinter","abstract":[{"text":"A ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"title":"Parse","url":"\/documentation\/parsing\/parse","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parse"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parse"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"title":"ParserBuilder","url":"\/documentation\/parsing\/parserbuilder","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","url":"\/documentation\/parsing\/parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/init(_:with:)-8nbrc":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol","title":"init(_:with:)","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(_:with:)-8nbrc","url":"\/documentation\/parsing\/parseprint\/init(_:with:)-8nbrc","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/Parser-Implementations":{"type":"topic","url":"\/documentation\/parsing\/parseprint\/parser-implementations","title":"Parser Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/Parser-Implementations","abstract":[],"kind":"article"}}}