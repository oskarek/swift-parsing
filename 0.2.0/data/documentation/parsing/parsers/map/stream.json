{"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map\/Parser-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stream","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO6StreamV","text":"Stream","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"> { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, the following parser can parse an integer followed by a newline from a collection"},{"type":"text","text":" "},{"type":"text","text":"of UTF8 bytes:"}]},{"type":"codeListing","code":["Parsers.Integer<ArraySlice<UInt8>, Int>()","  .skip(StartsWith(\"\\n\".utf8))"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"This parser can be transformed into one that processes an incoming stream of UTF8 bytes:","type":"text"}]},{"type":"codeListing","code":["let newlineSeparatedIntegers = Parsers.Integer<ArraySlice<UInt8>, Int>()","  .skip(StartsWith(\"\\n\".utf8))","  .stream"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"And then it can be used on a stream, such as values coming from standard in:","type":"text"}]},{"type":"codeListing","code":["var stdin = AnyIterator {","  readLine().map { ArraySlice($0.utf8) }","}","","newlineSeparatedIntegers","  .parse(&stdin)"],"syntax":"swift"}]}],"metadata":{"symbolKind":"property","extendedModule":"Parsing","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stream","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Stream","preciseIdentifier":"s:7Parsing7ParsersO6StreamV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:7Parsing6ParserPAASm5InputRpzrlE6streamAA7ParsersO6StreamVy_xGvp::SYNTHESIZED::s:7Parsing7ParsersO3MapV","roleHeading":"Instance Property","modules":[{"name":"Parsing"}],"title":"stream","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"RangeReplaceableCollection","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/map\/stream"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map\/stream"},"sections":[],"kind":"symbol","abstract":[{"text":"Transforms the receiver parser into one that can parse streams of input.","type":"text"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream":{"url":"\/documentation\/parsing\/parsers\/stream","navigatorTitle":[{"text":"Stream","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that can parse streams of input."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Stream","kind":"identifier"}],"title":"Parsers.Stream","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Map":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}],"title":"Parsers.Map","url":"\/documentation\/parsing\/parsers\/map","abstract":[{"text":"A parser that transforms the output of another parser with a given closure.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Map"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Map/Parser-Implementations":{"title":"Parser Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map\/Parser-Implementations","type":"topic","kind":"article","abstract":[],"url":"\/documentation\/parsing\/parsers\/map\/parser-implementations"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","url":"\/documentation\/parsing","abstract":[],"type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Map/stream":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stream","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Stream","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6StreamV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"stream","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map\/stream","type":"topic","kind":"symbol","abstract":[{"text":"Transforms the receiver parser into one that can parse streams of input.","type":"text"}],"url":"\/documentation\/parsing\/parsers\/map\/stream"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"title":"Parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"url":"\/documentation\/parsing\/parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"type":"topic","kind":"symbol"}}}