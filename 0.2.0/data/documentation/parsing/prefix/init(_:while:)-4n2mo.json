{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"length","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","text":"PartialRangeFrom"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")? = nil)"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"length","content":[{"type":"paragraph","inlineContent":[{"text":"A partial range that provides a minimum number of elements to consume for","type":"text"},{"text":" ","type":"text"},{"text":"parsing to be considered successful.","type":"text"}]}]},{"name":"predicate","content":[{"inlineContent":[{"text":"An optional closure that takes an element of the input sequence as its argument","type":"text"},{"text":" ","type":"text"},{"text":"and returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if the element should be included or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" if it should be excluded.","type":"text"},{"text":" ","type":"text"},{"text":"Once the predicate returns ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" it will not be called again.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"codeListing","code":["Prefix(4..., while: { $0.isNumber }).parse(\"123456\") \/\/ \"123456\"","Prefix(4..., while: { $0.isNumber }).parse(\"123\")    \/\/ nil"],"syntax":null}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/prefix\/init(_:while:)-4n2mo"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"symbolKind":"init","title":"init(_:while:)","modules":[{"name":"Parsing"}],"roleHeading":"Initializer","role":"symbol","externalID":"s:7Parsing6PrefixV_5whileACyxGs16PartialRangeFromVySiG_Sb7ElementQzcSgtcfc","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"PartialRangeFrom","kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":")?)","kind":"text"}]},"abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-4n2mo"},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-4n2mo":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-4n2mo","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"PartialRangeFrom","preciseIdentifier":"s:s16PartialRangeFromV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?)"}],"type":"topic","url":"\/documentation\/parsing\/prefix\/init(_:while:)-4n2mo","role":"symbol","kind":"symbol","title":"init(_:while:)","abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"url":"\/documentation\/parsing\/prefix","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","kind":"symbol","title":"Prefix","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input."}],"navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","url":"\/documentation\/parsing","abstract":[],"type":"topic","kind":"symbol"}}}